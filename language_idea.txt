Data types:

:i integer
:f float
:s string
:a array


Variables:

a = 1
b = 2

a + b # res: 3

Operators:

+    addition 
-    subtraction
*    multiplication
/    division
**   power
//   integer-division
%    modulo
=    assignment
->   conversion
.    member-accessor
<    comparison
>    ^
<=   ^
>=   ^
==   ^
!=   ^
!    not
[ ]  subscript

Decorators:
_    member-variable
@    functions
§    class

Return:
<- <stmt>

Conditional statements:

#if
~i <cond>
   ...
   ...
   
#else if
~ei <cond>
   ...
   ...
   
#else
~e
   ...
   ...

Loops:
Add functions for looping?

#for
~f <stmt?> <cond> <stmt>
    ...
    ...

#while
~w <cond>
    ...
    ...


Class/function-definition:

§person
    #initialize/constructor
    @i name
        _name = name
      

Built-in functions:

print       #print
printl

input       #input

file_open   #returns file-object

.read       #methods for file-object
.read_all
.write
.is_empty
.close
    

#Examples:  

#class
p = §person

#dynamic typing
n = 5

#conversion
s = "123"
n = s->:i

#function
@check_even num
    ~i num % 2 == 0
        @print "Even"
    ~e
        @print "Odd"